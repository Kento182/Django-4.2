###################  Creando una Maquina Virtual  #################
0.-Crear la carpeta y entrar en ella.
1.-Crear maquina Virtual
    python -m venv prueba1

2.-Entrar a la subcarpeta Scripts
    activate
3.-Instalar Django
    pip install django
        pip install pymysql
        pip install pillow
        pip install mysqlclient
        pip install django-crispy-forms
        pip install crispy-bootstrap5
        pip install psycopg2    
        *****************
    Importar librerias
        desde la otra Maquina Virtual
            pip freeze > file_name.txt
        en mi Maquina Virtual
            pip install -r file_name.txt
4.-Nota: siempre estar en el entorno virtual activo
5.-Regresar a la carpeta Raiz del proyecto
6.-Verificar Paquetes de nuestro Entorno Virtual
    pip freeze --local รณ pip list

###########################################################################

############ Creando un proyecto Web #####################
1.-django-admin startproject proyecto1 .
2.-Verificar si esta corriendo->Nota Estar sobre el Proyecto primer carpeta
    python manage.py runserver

##########################################################

############ Creando una App #####################
1.-python manage.py startapp "nombre" .

##########################################################

############ MANAGE #####################
1.-python manage.py runserver   Arranca servidor
2.-python manage.py startapp "nombre"   Crea un app
3.-python manage.py migrate     Hace las migraciones
4.-python manage.py showmigrations  Muestra las migraciones
5.-python manage.py makemigrations  Crea migraciones de los modelos
6.-python manage.py createsuperuser     Crea un superusuario

##########################################################

############# LEVANTAR PROYECTO EN local ################
python manage.py runserver --settings=app.local_settings
    donde app es el nombre del proyecto